/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Toko;

import javax.swing.table.DefaultTableModel;
import javax.xml.transform.Result;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.TableRowSorter;
/**
 *
 * @author DBSS_050
 */
public class Form_produk extends javax.swing.JFrame {
    /**
     * Creates new form Form_produk
     */
    private DefaultTableModel model;
    public Form_produk() throws SQLException {
        initComponents();
        showData();
        sort();
    }
    public DefaultTableModel saction() throws SQLException{
        DefaultTableModel tm = (DefaultTableModel) Tabel_produk.getModel();
        return tm;
    }
    
    private void sort() throws SQLException{
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(saction());
        Tabel_produk.setRowSorter(sorter);
    }
    
    public void showData(){
        try {
        Koneksi.Konek();
        if (Koneksi.conn != null) {
            StatusKoneksi.setText("Koneksi Sukses");
        }else{
            StatusKoneksi.setText("Koneksi Gagal");
        }         
        Object header[]={"Id_Barang","Kategori","Nama","Harga","Stok" , "Tanggal"};
        model = new DefaultTableModel(null , header);
        Tabel_produk.setModel(model);
        model.setRowCount(0);
        Statement stmt = Koneksi.conn.createStatement();
        String query = "SELECT * FROM Produk";
        ResultSet rs = stmt.executeQuery(query);
        Object [] n = new Object[6];
        while (rs.next()) {
            n[0] = rs.getString("Id_produk");
            n[1]  = rs.getString("Kategori");
            n[2] = rs.getString("Nama");
            n[3]  = rs.getString("Harga");
            n[4]  = rs.getString("Stok");
            n[5]   = rs.getString("Tanggal");
            model.addRow(n);
        }
        } catch (SQLException e ) {
                JOptionPane.showConfirmDialog(null,"Gagal query");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Tabel_produk = new javax.swing.JTable();
        InsertQuery = new javax.swing.JButton();
        UpdateQuery = new javax.swing.JButton();
        DeleteQuery = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Id_Barang = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        Nama = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Harga = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Tutup = new javax.swing.JButton();
        Home = new javax.swing.JButton();
        BatalQuery = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        Stok = new javax.swing.JTextField();
        Tanggal = new javax.swing.JTextField();
        StatusKoneksi = new javax.swing.JLabel();
        Kategori = new javax.swing.JTextField();
        Refresh = new javax.swing.JButton();
        SearchId = new javax.swing.JButton();
        SearchKat = new javax.swing.JButton();
        SearchNama = new javax.swing.JButton();
        SearchHarga = new javax.swing.JButton();
        SearchStok = new javax.swing.JButton();
        SearchTanggal = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        Tabel_produk.setBorder(javax.swing.BorderFactory.createCompoundBorder(null, javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        Tabel_produk.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id_Barang", "Kategori", "Nama", "Harga", "Stok", "Tanggal_cek"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        Tabel_produk.setCellSelectionEnabled(true);
        Tabel_produk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tabel_produkMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Tabel_produk);
        Tabel_produk.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (Tabel_produk.getColumnModel().getColumnCount() > 0) {
            Tabel_produk.getColumnModel().getColumn(0).setResizable(false);
            Tabel_produk.getColumnModel().getColumn(1).setResizable(false);
            Tabel_produk.getColumnModel().getColumn(2).setResizable(false);
            Tabel_produk.getColumnModel().getColumn(3).setResizable(false);
            Tabel_produk.getColumnModel().getColumn(4).setResizable(false);
            Tabel_produk.getColumnModel().getColumn(5).setResizable(false);
        }

        InsertQuery.setText("INSERT");
        InsertQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertQueryActionPerformed(evt);
            }
        });

        UpdateQuery.setText("UPDATE");
        UpdateQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateQueryActionPerformed(evt);
            }
        });

        DeleteQuery.setText("DELETE");
        DeleteQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteQueryActionPerformed(evt);
            }
        });

        jLabel1.setText("Id_Barang");

        jLabel2.setText("Kategori");

        Nama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NamaActionPerformed(evt);
            }
        });

        jLabel3.setText("Nama");

        jLabel4.setText("Harga");

        jLabel5.setText("Stok");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jLabel6.setText("FORM PRODUK");

        Tutup.setText("TUTUP");
        Tutup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TutupActionPerformed(evt);
            }
        });

        Home.setText("HOME");
        Home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeActionPerformed(evt);
            }
        });

        BatalQuery.setText("BATAL");
        BatalQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BatalQueryActionPerformed(evt);
            }
        });

        jLabel7.setText("Tanggal");

        StatusKoneksi.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        StatusKoneksi.setText("STATUS KONEKSI");

        Refresh.setText("REFRESH");
        Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshActionPerformed(evt);
            }
        });

        SearchId.setText("Search");
        SearchId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchIdActionPerformed(evt);
            }
        });

        SearchKat.setText("Search");
        SearchKat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchKatActionPerformed(evt);
            }
        });

        SearchNama.setText("Search");
        SearchNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchNamaActionPerformed(evt);
            }
        });

        SearchHarga.setText("Search");
        SearchHarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchHargaActionPerformed(evt);
            }
        });

        SearchStok.setText("Search");
        SearchStok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchStokActionPerformed(evt);
            }
        });

        SearchTanggal.setText("Search");
        SearchTanggal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchTanggalActionPerformed(evt);
            }
        });

        jMenu1.setText("PENDATAAN");

        jMenuItem1.setText("Data Produk");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Data Member");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Data Supplier");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("TRANSAKSI");

        jMenuItem4.setText("Penjualan");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuItem5.setText("Pembelian");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Home)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(172, 172, 172)
                                .addComponent(SearchId))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(UpdateQuery)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addGap(18, 18, 18)
                                                .addComponent(Kategori, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(Nama, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(Harga, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(Stok, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel7)
                                            .addGap(20, 20, 20)
                                            .addComponent(Tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(DeleteQuery)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(BatalQuery, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SearchKat)
                                    .addComponent(SearchNama)
                                    .addComponent(SearchHarga)
                                    .addComponent(SearchStok)
                                    .addComponent(SearchTanggal))))))
                .addGap(23, 23, 23)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Refresh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Tutup))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(68, 68, 68)
                            .addComponent(Id_Barang, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(11, 11, 11))
                        .addComponent(StatusKoneksi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(InsertQuery)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Tutup)
                        .addComponent(Refresh)))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(34, 34, 34))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(Id_Barang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(SearchId)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(SearchKat)
                                    .addComponent(Kategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(SearchNama)
                                    .addComponent(Nama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(SearchHarga)
                                    .addComponent(Harga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(SearchStok)
                                    .addComponent(Stok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(SearchTanggal)
                                    .addComponent(Tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(InsertQuery)
                            .addComponent(UpdateQuery))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BatalQuery)
                            .addComponent(DeleteQuery))
                        .addGap(18, 18, 18)
                        .addComponent(StatusKoneksi)
                        .addGap(0, 100, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addComponent(Home)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TutupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TutupActionPerformed
        dispose();
        try {
            Koneksi.Tutup();
        } catch (SQLException ex) {
            Logger.getLogger(Form_Home_Toko.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_TutupActionPerformed

    private void HomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeActionPerformed
        Form_Home_Toko hom = new Form_Home_Toko();
        hom.setVisible(true);
        dispose();
    }//GEN-LAST:event_HomeActionPerformed

    private void InsertQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertQueryActionPerformed
        try {
        Koneksi.Konek();
        String Query_T = "Insert Into Produk values (?,?,?,?,?,?)";
            PreparedStatement ps = Koneksi.conn.prepareStatement(Query_T);
            ps.setString(1,Nama.getText());
            ps.setString(2,Harga.getText());
            ps.setString(3,Stok.getText());
            ps.setString(4,Kategori.getText());
            ps.setString(5,Id_Barang.getText());
            ps.setString(6,Tanggal.getText());
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null,"Insert Succsessfully");
            DefaultTableModel tM = (DefaultTableModel) Tabel_produk.getModel();
            tM.setRowCount(0);
            //After query
            Refresh();
        } catch (SQLException e ) {
            JOptionPane.showMessageDialog(null,"Insert Fail");
        }
    }//GEN-LAST:event_InsertQueryActionPerformed

    private void NamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NamaActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        try {
            Form_produk prd = new Form_produk();
            prd.setVisible(true);
            dispose();
        } catch (SQLException ex) {
            Logger.getLogger(Form_produk.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        Form_member mbr = null;
        try {
            mbr = new Form_member();
        } catch (SQLException ex) {
            Logger.getLogger(Form_produk.class.getName()).log(Level.SEVERE, null, ex);
        }
        mbr.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        try {
            Form_supplier supp = new Form_supplier();
            supp.setVisible(true);
            dispose();
        } catch (SQLException ex) {
            Logger.getLogger(Form_produk.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        try {
            Form_penjualan p = new Form_penjualan();
            p.setVisible(true);
            dispose();
        } catch (SQLException ex) {
            Logger.getLogger(Form_produk.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        try {
            Form_pembelian p = new Form_pembelian();
            p.setVisible(true);
            dispose();
        } catch (SQLException ex) {
            Logger.getLogger(Form_produk.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed
    
    private void UpdateQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateQueryActionPerformed
        String IdBarang = Id_Barang.getText();
        try {
            Koneksi.Konek();
            String Query_T = "Update Produk set Id_produk = ?,Nama = ?,Harga = ?,Stok=?, Kategori=?,Tanggal=? where Id_produk = ?";   
            PreparedStatement ps = Koneksi.conn.prepareStatement(Query_T);
            ps.setString(1,Id_Barang.getText());
            ps.setString(2,Nama.getText());
            ps.setString(3,Harga.getText());
            ps.setString(4,Stok.getText());
            ps.setString(5,Kategori.getText());
            ps.setString(6,Tanggal.getText());
            ps.setString(7,IdBarang);
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null,"Update Succsessfully");
            //After query
            showData();
            setBatal();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Update Failed\n Eror : "+ex);
        }
    }//GEN-LAST:event_UpdateQueryActionPerformed

    private void Tabel_produkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tabel_produkMouseClicked
        int baris = Tabel_produk.getSelectedRow();
        Id_Barang.setText( Tabel_produk.getValueAt(baris, 0).toString());
        Kategori.setText(Tabel_produk.getValueAt(baris, 1).toString());
        Nama.setText(Tabel_produk.getValueAt(baris, 2).toString());
        Harga.setText(Tabel_produk.getValueAt(baris, 3).toString());
        Stok.setText(Tabel_produk.getValueAt(baris, 4).toString());
        Tanggal.setText(Tabel_produk.getValueAt(baris, 5).toString());
    }//GEN-LAST:event_Tabel_produkMouseClicked

    private void BatalQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BatalQueryActionPerformed
        setBatal();
    }//GEN-LAST:event_BatalQueryActionPerformed
    public void setBatal(){
        Id_Barang.setText("");
        Kategori.setText("");
        Nama.setText("");
        Harga.setText("");
        Stok.setText("");
        Tanggal.setText("");

    }
    private void DeleteQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteQueryActionPerformed
        String query = "DELETE FROM Produk WHERE Id_produk = '" + Id_Barang.getText() +"';";
        try {
            PreparedStatement stmt = Koneksi.conn.prepareStatement(query);
            if (stmt.execute()) {
                JOptionPane.showMessageDialog(null,"Delete Fail");
            }else{
                JOptionPane.showMessageDialog(null,"Delete Success");
                //After query
                //cleanTable();
                //showData();
                Refresh();
            }
        } catch (SQLException e ) {
            JOptionPane.showMessageDialog(null,"Delete Fail");
        }
    }//GEN-LAST:event_DeleteQueryActionPerformed

    private void RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshActionPerformed
        Refresh();
    }//GEN-LAST:event_RefreshActionPerformed
    public void Refresh(){
        try {
            dispose();
            Form_produk p = new Form_produk();
            p.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(Form_produk.class.getName()).log(Level.SEVERE, null, ex);
        }    
    }
    private void SearchIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchIdActionPerformed
        try {
            Statement stmt = Koneksi.conn.createStatement();
            String query = "SELECT * FROM Produk WHERE Id_produk='"+Id_Barang.getText()+"';";
            ResultSet rs = stmt.executeQuery(query);
            Object [] n = new Object[6];
            cleanTable();
            while (rs.next()) {
                n[0] = rs.getString("Id_produk");
                n[1]  = rs.getString("Kategori");
                n[2] = rs.getString("Nama");
                n[3]  = rs.getString("Harga");
                n[4]  = rs.getString("Stok");
                n[5]  = rs.getString("Tanggal");
                model.addRow(n);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Data tidak ditemukan");
        }
    }//GEN-LAST:event_SearchIdActionPerformed

    private void SearchKatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchKatActionPerformed
        try {
            Statement stmt = Koneksi.conn.createStatement();
            String query = "SELECT * FROM Produk WHERE Kategori='"+Kategori.getText()+"';";
            ResultSet rs = stmt.executeQuery(query);
            Object [] n = new Object[6];
            cleanTable();
            while (rs.next()) {
                n[0] = rs.getString("Id_produk");
                n[1]  = rs.getString("Kategori");
                n[2] = rs.getString("Nama");
                n[3]  = rs.getString("Harga");
                n[4]  = rs.getString("Stok");
                n[5]  = rs.getString("Tanggal");
                model.addRow(n);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Data tidak ditemukan");
        }
    }//GEN-LAST:event_SearchKatActionPerformed

    private void SearchNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchNamaActionPerformed
        try {
            Statement stmt = Koneksi.conn.createStatement();
            String query = "SELECT * FROM Produk WHERE Nama='"+Nama.getText()+"';";
            ResultSet rs = stmt.executeQuery(query);
            Object [] n = new Object[6];
            cleanTable();
            while (rs.next()) {
                n[0] = rs.getString("Id_produk");
                n[1]  = rs.getString("Kategori");
                n[2] = rs.getString("Nama");
                n[3]  = rs.getString("Harga");
                n[4]  = rs.getString("Stok");
                n[5]  = rs.getString("Tanggal");
                model.addRow(n);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Data tidak ditemukan");
        }

    }//GEN-LAST:event_SearchNamaActionPerformed

    private void SearchHargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchHargaActionPerformed
        try {
            Statement stmt = Koneksi.conn.createStatement();
            String query = "SELECT * FROM Produk WHERE Harga='"+Harga.getText()+"';";
            ResultSet rs = stmt.executeQuery(query);
            Object [] n = new Object[6];
            cleanTable();
            while (rs.next()) {
                n[0] = rs.getString("Id_produk");
                n[1]  = rs.getString("Kategori");
                n[2] = rs.getString("Nama");
                n[3]  = rs.getString("Harga");
                n[4]  = rs.getString("Stok");
                n[5]  = rs.getString("Tanggal");
                model.addRow(n);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Data tidak ditemukan");
        }

    }//GEN-LAST:event_SearchHargaActionPerformed

    private void SearchStokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchStokActionPerformed
        try {
            Statement stmt = Koneksi.conn.createStatement();
            String query = "SELECT * FROM Produk WHERE Stok='"+Stok.getText()+"';";
            ResultSet rs = stmt.executeQuery(query);
            Object [] n = new Object[6];
            cleanTable();
            while (rs.next()) {
                n[0] = rs.getString("Id_produk");
                n[1]  = rs.getString("Kategori");
                n[2] = rs.getString("Nama");
                n[3]  = rs.getString("Harga");
                n[4]  = rs.getString("Stok");
                n[5]  = rs.getString("Tanggal");
                model.addRow(n);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Data tidak ditemukan");
        }
    }//GEN-LAST:event_SearchStokActionPerformed

    private void SearchTanggalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchTanggalActionPerformed
        try {
            Statement stmt = Koneksi.conn.createStatement();
            String query = "SELECT * FROM Produk WHERE Tanggal='"+Tanggal.getText()+"';";
            ResultSet rs = stmt.executeQuery(query);
            Object [] n = new Object[6];
            cleanTable();
            while (rs.next()) {
                n[0] = rs.getString("Id_produk");
                n[1]  = rs.getString("Kategori");
                n[2] = rs.getString("Nama");
                n[3]  = rs.getString("Harga");
                n[4]  = rs.getString("Stok");
                n[5]  = rs.getString("Tanggal");
                model.addRow(n);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Data tidak ditemukan");
        }
    }//GEN-LAST:event_SearchTanggalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form_produk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form_produk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form_produk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form_produk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Form_produk().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Form_produk.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    public void cleanTable(){
	int baris = model.getRowCount();
	for(int i = 0 ; i < baris ; i++){
            model.removeRow(0);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BatalQuery;
    private javax.swing.JButton DeleteQuery;
    private javax.swing.JTextField Harga;
    private javax.swing.JButton Home;
    private javax.swing.JTextField Id_Barang;
    private javax.swing.JButton InsertQuery;
    private javax.swing.JTextField Kategori;
    private javax.swing.JTextField Nama;
    private javax.swing.JButton Refresh;
    private javax.swing.JButton SearchHarga;
    private javax.swing.JButton SearchId;
    private javax.swing.JButton SearchKat;
    private javax.swing.JButton SearchNama;
    private javax.swing.JButton SearchStok;
    private javax.swing.JButton SearchTanggal;
    private javax.swing.JLabel StatusKoneksi;
    private javax.swing.JTextField Stok;
    private javax.swing.JTable Tabel_produk;
    private javax.swing.JTextField Tanggal;
    private javax.swing.JButton Tutup;
    private javax.swing.JButton UpdateQuery;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Toko;

import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author DBSS_050
 */
public class Form_penjualan extends javax.swing.JFrame {

    /**
     * Creates new form Form_penjualan
     */
    private DefaultTableModel model;
    public Form_penjualan() throws SQLException {
        initComponents();
        showData();
        sort();
    }
    public DefaultTableModel saction() throws SQLException{
        DefaultTableModel tm = (DefaultTableModel) Tabel_penjualan.getModel();
        return tm;
    }
    
    private void sort() throws SQLException{
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(saction());
        Tabel_penjualan.setRowSorter(sorter);
    }

    public void showData(){
        Object header[]={"No_nota","Id_member","Tanggal","IdBarang","Jumlah","Harga","Total"};
        model = new DefaultTableModel(null , header);
        Tabel_penjualan.setModel(model);
        model.setRowCount(0);
        Koneksi.Konek();
        if (Koneksi.conn != null) {
            StatusKoneksi.setText("Koneksi Sukses");
        }else{
            StatusKoneksi.setText("Koneksi Gagal");
        }
        try {
        Statement stmt = Koneksi.conn.createStatement();
        String query = "SELECT * FROM Penjualan";
        ResultSet rs = stmt.executeQuery(query);
            Object [] n = new Object[7];
            while (rs.next()) {
                n[0]  = rs.getString("No_nota");
                n[1]  = rs.getString("Id_member");
                n[2]  = rs.getString("Tanggal");
                n[3]  = rs.getString("Id_produk");
                n[4]  = rs.getString("Jumlah");
                n[5]  = rs.getString("Harga");
                n[6]  = rs.getString("Total");
                model.addRow(n);
            }        } catch (SQLException e ) {
            StatusKoneksi.setText("Gagal query");
        }    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        No_trans = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        Id_produk = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Tanggal = new javax.swing.JTextField();
        InsertQuery = new javax.swing.JButton();
        DeleteQuery = new javax.swing.JButton();
        UpdateQuery = new javax.swing.JButton();
        BatalQuery = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        Jumlah = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabel_penjualan = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        Refresh = new javax.swing.JButton();
        StatusKoneksi = new javax.swing.JLabel();
        SearchNo = new javax.swing.JButton();
        SearchBarang = new javax.swing.JButton();
        SearchTanggal = new javax.swing.JButton();
        SearchJum = new javax.swing.JButton();
        SearchIsMember = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        IdMember = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("No_transaksi");

        jLabel2.setText("Id_Barang");

        jLabel3.setText("Tanggal");

        InsertQuery.setText("INSERT");
        InsertQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertQueryActionPerformed(evt);
            }
        });

        DeleteQuery.setText("DELETE");
        DeleteQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteQueryActionPerformed(evt);
            }
        });

        UpdateQuery.setText("UPDATE");
        UpdateQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateQueryActionPerformed(evt);
            }
        });

        BatalQuery.setText("BATAL");
        BatalQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BatalQueryActionPerformed(evt);
            }
        });

        jLabel4.setText("Jumlah");

        Tabel_penjualan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "No_transaksi", "IdMember", "Tanggal", "IdBarang", "Jumlah", "Harga", "Total"
            }
        ));
        Tabel_penjualan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tabel_penjualanMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Tabel_penjualan);

        jButton5.setText("HOME");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("TUTUP");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("FORM PENJUALAN");

        Refresh.setText("REFRESH");
        Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshActionPerformed(evt);
            }
        });

        StatusKoneksi.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        StatusKoneksi.setText("STATUS KONEKSI");

        SearchNo.setText("Search");
        SearchNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchNoActionPerformed(evt);
            }
        });

        SearchBarang.setText("Search");
        SearchBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBarangActionPerformed(evt);
            }
        });

        SearchTanggal.setText("Search");
        SearchTanggal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchTanggalActionPerformed(evt);
            }
        });

        SearchJum.setText("Search");
        SearchJum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchJumActionPerformed(evt);
            }
        });

        SearchIsMember.setText("Search");
        SearchIsMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchIsMemberActionPerformed(evt);
            }
        });

        jLabel7.setText("Id_member");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("FOR NON MEMBER INSERT Id_num = 000");

        jMenu1.setText("PENDATAAN");

        jMenuItem1.setText("Data Produk");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Data Member");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Data Supplier");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("TRANSAKSI");

        jMenuItem4.setText("Penjualan");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuItem5.setText("Pembelian");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(StatusKoneksi, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(89, 89, 89))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(InsertQuery)
                                    .addComponent(DeleteQuery))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(79, 79, 79)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(BatalQuery, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(UpdateQuery))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(No_trans, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(Id_produk, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(IdMember, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(Jumlah, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                                            .addComponent(Tanggal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(SearchNo)
                                        .addGap(9, 9, 9))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(SearchTanggal)
                                            .addComponent(SearchBarang)
                                            .addComponent(SearchJum)
                                            .addComponent(SearchIsMember))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(233, 233, 233)
                        .addComponent(Refresh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 575, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton5)
                        .addComponent(jButton6)
                        .addComponent(Refresh))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(No_trans, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(SearchNo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(Id_produk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SearchBarang))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(Tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SearchTanggal))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(Jumlah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SearchJum))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(IdMember, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(SearchIsMember)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(InsertQuery)
                            .addComponent(UpdateQuery))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BatalQuery)
                            .addComponent(DeleteQuery))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(StatusKoneksi))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(86, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        Form_Home_Toko hom = new Form_Home_Toko();
        hom.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        dispose();
        try {
            Koneksi.Tutup();
        } catch (SQLException ex) {
            Logger.getLogger(Form_Home_Toko.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        try {
            Form_produk prd = new Form_produk();
            prd.setVisible(true);
            dispose();
        } catch (SQLException ex) {
            Logger.getLogger(Form_penjualan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        try {
            Form_member mbr = new Form_member();
            mbr.setVisible(true);
            dispose();
        } catch (SQLException ex) {
            Logger.getLogger(Form_penjualan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        try {
            Form_supplier supp = new Form_supplier();
            supp.setVisible(true);
            dispose();
        } catch (SQLException ex) {
            Logger.getLogger(Form_penjualan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        try {
            Form_penjualan p = new Form_penjualan();
            p.setVisible(true);
            dispose();
        } catch (SQLException ex) {
            Logger.getLogger(Form_penjualan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        try {
            Form_pembelian p = new Form_pembelian();
            p.setVisible(true);
            dispose();
        } catch (SQLException ex) {
            Logger.getLogger(Form_penjualan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshActionPerformed
        Refresh();
    }//GEN-LAST:event_RefreshActionPerformed
    public void Refresh(){
        try {
            dispose();
            Form_penjualan m = new Form_penjualan();
            m.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(Form_penjualan.class.getName()).log(Level.SEVERE, null, ex);
        }    
    }
    public void showSearchData(String kolom , String param){
        try {
            model.setRowCount(0);
            Statement stmt = Koneksi.conn.createStatement();
            String query = "SELECT * FROM Penjualan WHERE "+ kolom+"='"+param+"';";
            ResultSet rs = stmt.executeQuery(query);
            Object [] n = new Object[7];
            while (rs.next()) {
                n[0]  = rs.getString("No_nota");
                n[1]  = rs.getString("Id_member");
                n[2]  = rs.getString("Tanggal");
                n[3]  = rs.getString("Id_produk");
                n[4]  = rs.getString("Jumlah");
                n[5]  = rs.getString("Harga");
                n[6]  = rs.getString("Total");
                model.addRow(n);
            }                    
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Data tidak ditemukan");
        }    
    }
    
    
    private void SearchNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchNoActionPerformed
        showSearchData("No_nota", No_trans.getText());
    }//GEN-LAST:event_SearchNoActionPerformed
    private String No_transaksi;
    private void Tabel_penjualanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tabel_penjualanMouseClicked
        int baris = Tabel_penjualan.getSelectedRow();
        No_trans.setText(Tabel_penjualan.getValueAt(baris, 0).toString());
        Id_produk.setText(Tabel_penjualan.getValueAt(baris, 3).toString());
        Tanggal.setText(Tabel_penjualan.getValueAt(baris, 2).toString());
        Jumlah.setText(Tabel_penjualan.getValueAt(baris, 4).toString());
        IdMember.setText(Tabel_penjualan.getValueAt(baris, 1).toString());        
        No_transaksi = No_trans.getText();
    }//GEN-LAST:event_Tabel_penjualanMouseClicked

    private void SearchBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBarangActionPerformed
        showSearchData("Id_produk", Id_produk.getText());
    }//GEN-LAST:event_SearchBarangActionPerformed

    private void SearchTanggalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchTanggalActionPerformed
        showSearchData("Tanggal", Tanggal.getText());
    }//GEN-LAST:event_SearchTanggalActionPerformed

    private void SearchJumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchJumActionPerformed
        showSearchData("Jumlah", Jumlah.getText());
    }//GEN-LAST:event_SearchJumActionPerformed

    private void SearchIsMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchIsMemberActionPerformed
        showSearchData("Id_member", IdMember.getText());
    }//GEN-LAST:event_SearchIsMemberActionPerformed
    
    public int getHarga(String IdProd){
        int harga = 0;
        try {
            Statement stmt = Koneksi.conn.createStatement();
            String query = "SELECT * FROM Produk Where Id_produk = '"+IdProd+"';";
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                harga = Integer.parseInt(rs.getString("Harga"));
            }
        } catch (SQLException e ) {
            JOptionPane.showMessageDialog(null,"Data salah");
        }
        return harga;
    }

    private void InsertQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertQueryActionPerformed
        try {
        int jumlah = 0 , harga = 0, total = 0;
        jumlah = Integer.parseInt(Jumlah.getText());
        harga  = getHarga(Id_produk.getText());
        total  = jumlah * harga;
        String StatusMember = "";
            if (isMember(IdMember.getText())) {
                StatusMember = IdMember.getText();
                harga+=harga*0.05;
            }else{
                StatusMember = "NON";
                harga+=harga*0.1;
            }
        Koneksi.Konek();
            String Query_T = "Insert Into Penjualan values (?,?,?,?,?,?,?)";
            PreparedStatement ps = Koneksi.conn.prepareStatement(Query_T);
            ps.setString(1,Id_produk.getText());
            ps.setString(2,No_trans.getText());
            ps.setString(3,StatusMember);
            ps.setString(4,Tanggal.getText());
            ps.setString(5,Jumlah.getText());
            ps.setString(6,String.valueOf(harga));
            ps.setString(7,String.valueOf(total));
            ps.executeUpdate();
            
            Statement stmt = Koneksi.conn.createStatement();
            String Query_Select_prod = "Select * FROM Produk where Id_produk = "+Id_produk.getText();   
            ResultSet rs = stmt.executeQuery(Query_Select_prod);
            Object [] n = new Object[1];
            while (rs.next()) {
                n[0] = rs.getString("Stok");
            }
            int stok  = Integer.parseInt(n[0].toString());
                stok -= Integer.parseInt(Jumlah.getText());
            
            Koneksi.Konek();
            String QueryUPDET     = "Update Produk set Stok=? where Id_produk = ?";   
            PreparedStatement ps2 = Koneksi.conn.prepareStatement(QueryUPDET);
            ps2.setString(1,String.valueOf(stok));
            ps2.setString(2,Id_produk.getText());
            ps2.executeUpdate();
            
            JOptionPane.showMessageDialog(null,"Insert Succsessfully");   
            Refresh();
        } catch (SQLException e ) {
            JOptionPane.showMessageDialog(null,"Insert Fail");
        }
        
    }//GEN-LAST:event_InsertQueryActionPerformed

    private void BatalQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BatalQueryActionPerformed
        setBatal();
    }//GEN-LAST:event_BatalQueryActionPerformed

    private void UpdateQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateQueryActionPerformed
        try {            
            Koneksi.Konek();
            String Query_T = "Update Penjualan set No_nota=?,Id_produk = ?,Tanggal = ?,Jumlah=?,Id_member=? WHERE No_nota=?;";   
            PreparedStatement ps = Koneksi.conn.prepareStatement(Query_T);
            ps.setString(1,this.No_trans.getText());
            ps.setString(2,Id_produk.getText());
            ps.setString(3,Tanggal.getText());
            ps.setString(4,Jumlah.getText());
            ps.setString(5,IdMember.getText());
            ps.setString(6,No_transaksi);
            ps.executeUpdate();
            DefaultTableModel tM = (DefaultTableModel) Tabel_penjualan.getModel();
            JOptionPane.showMessageDialog(null,"Update Succsessfully");
            tM.setRowCount(0);            
            Refresh();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Update Failed\n Eror : "+ex);
        }

    }//GEN-LAST:event_UpdateQueryActionPerformed

    private void DeleteQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteQueryActionPerformed
        String query = "DELETE FROM Penjualan WHERE No_nota = '" + No_trans.getText() +"';";
        try {
            PreparedStatement stmt = Koneksi.conn.prepareStatement(query);
            if (stmt.execute()) {
                JOptionPane.showMessageDialog(null,"Delete Failed");
            }else{
                JOptionPane.showMessageDialog(null,"Delete Success");
                Refresh();
            }
        } catch (SQLException e ) {
            JOptionPane.showMessageDialog(null,"Delete Failed\n Eror : "+e);
        }

    }//GEN-LAST:event_DeleteQueryActionPerformed
    
    public void setBatal(){
        No_trans.setText("");
        Id_produk.setText("");
        Tanggal.setText("");
        Jumlah.setText("");   
        IdMember.setText("");   
    }
    
    public boolean isMember(String Id_member){
        String ismember = "";
        try {
            Statement stmt = Koneksi.conn.createStatement();
            String query = "SELECT * FROM Member Where Id_Member = '"+Id_member+"';";
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                ismember = rs.getString("Id_Member");
            }
        } catch (SQLException e ) {
            JOptionPane.showMessageDialog(null,"Data salah");
        }
                if(IdMember.getText().equals(ismember) && IdMember.getText() != "000"){
                    return true;
                }else{
                    return false;
                }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form_penjualan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form_penjualan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form_penjualan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form_penjualan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Form_penjualan().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Form_penjualan.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BatalQuery;
    private javax.swing.JButton DeleteQuery;
    private javax.swing.JTextField IdMember;
    private javax.swing.JTextField Id_produk;
    private javax.swing.JButton InsertQuery;
    private javax.swing.JTextField Jumlah;
    private javax.swing.JTextField No_trans;
    private javax.swing.JButton Refresh;
    private javax.swing.JButton SearchBarang;
    private javax.swing.JButton SearchIsMember;
    private javax.swing.JButton SearchJum;
    private javax.swing.JButton SearchNo;
    private javax.swing.JButton SearchTanggal;
    private javax.swing.JLabel StatusKoneksi;
    private javax.swing.JTable Tabel_penjualan;
    private javax.swing.JTextField Tanggal;
    private javax.swing.JButton UpdateQuery;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
